{"version":3,"file":"static/js/534.74d0cda9.chunk.js","mappings":"gMAGaA,GAAOC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,2Z,iPCSXE,EAAmBC,EAAAA,KAAaC,MAAM,CAE1CC,MAAOF,EAAAA,GAAW,oBACfE,MAAM,uBACNC,SAAS,qBACZC,SAAUJ,EAAAA,GAAW,uBAClBK,IAAI,EAAG,qDACPF,SAAS,0BAGDG,EAAa,WAExB,IAIMC,GAAWC,EAAAA,EAAAA,MACXC,EAAa,IAAIC,gBAQjBC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAPoB,CAEpBX,MAAO,GACPE,SAAU,IAKVL,iBAAkBA,EAClBe,SAAU,SAAAC,GACRR,GAASS,EAAAA,EAAAA,IAASD,EAAQN,IACvBQ,SACAC,MAAK,SAAAC,GAnBG,IAAAC,EAoBPC,QAAQC,IAAIH,GApBLC,EAqBA,6BApBbG,EAAAA,GAAAA,QAAA,UAAiBH,GAAQ,CACvBI,MAAO,QAsBJ,GACJ,IAOH,OACE,+BAEI,UAACC,EAAA,EAAD,CAAKC,GAAG,OAAOZ,SAAUH,EAAOgB,aAAcC,GAAI,CAAEC,GAAI,GAAxD,WAaE,SAACC,EAAA,EAAD,CACEC,OAAO,SACPC,WAAS,EACT7B,UAAQ,EACR8B,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,MAAOzB,EAAOI,OAAOb,MACrBmC,SAAU1B,EAAO2B,aACjBC,MAAO5B,EAAO6B,QAAQtC,OAASuC,QAAQ9B,EAAO+B,OAAOxC,OACrDyC,WAAYhC,EAAO6B,QAAQtC,OAASS,EAAO+B,OAAOxC,SAEpD,SAAC4B,EAAA,EAAD,CACEC,OAAO,SACPC,WAAS,EACT7B,UAAQ,EACR8B,GAAG,WACHC,KAAK,WACLC,MAAM,WACNS,KAAK,WACLR,MAAOzB,EAAOI,OAAOX,SACrBiC,SAAU1B,EAAO2B,aACjBC,MAAO5B,EAAO6B,QAAQpC,UAAYqC,QAAQ9B,EAAO+B,OAAOtC,UACxDuC,WAAYhC,EAAO6B,QAAQpC,UAAYO,EAAO+B,OAAOtC,YAEvD,SAACyC,EAAA,EAAD,CACED,KAAK,SACLZ,WAAS,EACTc,QAAQ,YACRlB,GAAI,CAAEC,GAAI,EAAGkB,GAAI,GAJnB,0BAYT,E,8BC5FYC,EAAa,WACxB,IAAMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAE9B,OACE,8BACIF,GAmCA,SAACxB,EAAA,EAAD,CACEC,GAAG,OACH0B,QAAQ,OACRC,cAAc,SACdC,WAAW,SACXC,eAAe,SACfC,OAAO,QANT,UAQE,SAACC,EAAA,EAAD,OAlCF,UAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,WACE,SAACC,EAAA,GAAD,KACA,UAAC,IAAD,CACEhC,GAAI,CACFiC,UAAW,EACXT,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACQ,EAAA,EAAD,CAAQlC,GAAI,CAAEmC,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYC,UAAU,KAAKrB,QAAQ,KAAnC,sBAGA,SAACxC,EAAD,KACA,SAAC8D,EAAA,GAAD,CAAMC,WAAS,EAACd,eAAe,WAA/B,UACE,SAACa,EAAA,GAAD,CAAME,MAAI,EAAV,UACE,SAAC,IAAD,CAAMC,GAAG,SAAT,yDAoBf,C,0BCpEGC,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,KAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,uNACD,mBAEJN,EAAQ,EAAUG,C","sources":["components/SingUp/SingUp.styled.jsx","components/SingUp/SingUpForm.jsx","pages/SingUpPage.jsx","../node_modules/@mui/icons-material/AppRegistration.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(NavLink)`\n  margin: 0;\n  /* font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif; */\n  font-weight: 400;\n  font-size: 0.875rem;\n  line-height: 1.43;\n  letter-spacing: 0.01071em;\n  color: #1976d2;\n  /* -webkit-text-decoration: underline; */\n  text-decoration: underline;\n  text-decoration-color: rgba(25, 118, 210, 0.4);\n  :hover,\n  :focus {\n    text-decoration-color: inherit;\n  }\n`;\n","import Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport * as Yup from 'yup';\nimport { Box } from 'components/Box';\nimport { useFormik } from 'formik';\n// import { useSignupMutation } from 'redux/authApi';\nimport { useDispatch } from 'react-redux';\n// import { updateToken } from '../../redux/authSlice';\nimport { register } from 'redux/authApi';\nimport { toast } from 'react-toastify';\n\n\nconst validationSchema = Yup.object().shape({\n  // name: Yup.string('Enter your name').required('name is required'),\n  email: Yup.string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: Yup.string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nexport const SingUpForm = () => {\n  // const [verify, setVerify] = useState(null);\n  const notify = text =>\n    toast.success(`${text}`, {\n      theme: 'dark',\n    });\n  const dispatch = useDispatch();\n  const controller = new AbortController();\n\n  const initialValues = {\n    // name: '',\n    email: '',\n    password: '',\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      dispatch(register(values, controller))\n        .unwrap()\n        .then(originalPromiseResult => {\n          console.log(originalPromiseResult);\n          notify('check your email to verify');\n          // setVerify(true);\n          // handle result here\n        });\n    },\n  });\n\n  //   if (cancellSignal) {\n  //   controller.abort();\n  // }\n\n  return (\n    <>\n  \n        <Box as=\"form\" onSubmit={formik.handleSubmit} sx={{ mt: 1 }}>\n          {/* <TextField\n          margin=\"normal\"\n          fullWidth\n          required\n          id=\"name\"\n          name=\"name\"\n          label=\"name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        /> */}\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            required\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            required\n            id=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Register\n          </Button>\n        </Box>\n\n    </>\n  );\n};\n","import { Box } from 'components/Box';\n// import { SingUp } from 'components/SingUp/SingUp';\nimport * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport BoxM from '@mui/material/Box';\nimport AppRegistrationIcon from '@mui/icons-material/AppRegistration';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { SingUpForm } from 'components/SingUp/SingUpForm';\nimport { Link } from 'components/SingUp/SingUp.styled';\nimport { useSelector } from 'react-redux';\nimport { getAuthIsLoading } from 'redux/selectors';\nimport { SpinnerLoader } from 'components/SpinnerLoader/SpinnerLoader';\n// import { Link } from './SingUp.styled';\n\nexport const SingUpPage = () => {\n  const isLoading = useSelector(getAuthIsLoading);\n\n  return (\n    <>\n      {!isLoading ? (\n        // <Box\n        //   as=\"main\"\n        //   display=\"flex\"\n        //   flexDirection=\"column\"\n        //   alignItems=\"center\"\n        //   gridGap={3}\n        //   pt={5}\n        // >\n        <Container maxWidth=\"xs\">\n          <CssBaseline />\n          <BoxM\n            sx={{\n              marginTop: 8,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n              <AppRegistrationIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign up\n            </Typography>\n            <SingUpForm />\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link to=\"/login\">Already have an account? Sign in</Link>\n              </Grid>\n            </Grid>\n          </BoxM>\n        </Container>\n      ) : (\n        // </Box>\n        <Box\n          as=\"main\"\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          height=\"100vh\"\n        >\n          <SpinnerLoader />\n        </Box>\n      )}\n    </>\n  );\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10 4h4v4h-4zM4 16h4v4H4zm0-6h4v4H4zm0-6h4v4H4zm10 8.42V10h-4v4h2.42zm6.88-1.13-1.17-1.17c-.16-.16-.42-.16-.58 0l-.88.88L20 12.75l.88-.88c.16-.16.16-.42 0-.58zM11 18.25V20h1.75l6.67-6.67-1.75-1.75zM16 4h4v4h-4z\"\n}), 'AppRegistration');\n\nexports.default = _default;"],"names":["Link","styled","NavLink","validationSchema","Yup","shape","email","required","password","min","SingUpForm","dispatch","useDispatch","controller","AbortController","formik","useFormik","initialValues","onSubmit","values","register","unwrap","then","originalPromiseResult","text","console","log","toast","theme","Box","as","handleSubmit","sx","mt","TextField","margin","fullWidth","id","name","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","variant","mb","SingUpPage","isLoading","useSelector","getAuthIsLoading","display","flexDirection","alignItems","justifyContent","height","SpinnerLoader","Container","maxWidth","CssBaseline","marginTop","Avatar","m","bgcolor","AppRegistration","Typography","component","Grid","container","item","to","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}