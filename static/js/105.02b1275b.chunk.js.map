{"version":3,"file":"static/js/105.02b1275b.chunk.js","mappings":"0VAYMA,EAAmBC,EAAAA,KAAaC,MAAM,CAE1CC,MAAOF,EAAAA,GAAW,oBACfE,MAAM,uBACNC,SAAS,qBACZC,SAAUJ,EAAAA,GAAW,uBAClBK,IAAI,EAAG,qDACPF,SAAS,0BAGDG,EAAa,WAExB,IAIMC,GAAWC,EAAAA,EAAAA,MACXC,EAAa,IAAIC,gBAQjBC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAPoB,CAEpBX,MAAO,GACPE,SAAU,IAKVL,iBAAkBA,EAClBe,SAAU,SAAAC,GACRR,GAASS,EAAAA,EAAAA,IAASD,EAAQN,IACvBQ,SACAC,MAAK,SAAAC,GAnBG,IAAAC,EAoBPC,QAAQC,IAAIH,GApBLC,EAqBA,6BApBbG,EAAAA,GAAAA,QAAA,UAAiBH,GAAQ,CACvBI,MAAO,QAsBJ,GACJ,IAOH,OACE,+BAEI,UAACC,EAAA,EAAD,CAAKC,GAAG,OAAOZ,SAAUH,EAAOgB,aAAcC,GAAI,CAAEC,GAAI,GAAxD,WAaE,SAACC,EAAA,EAAD,CACEC,OAAO,SACPC,WAAS,EACT7B,UAAQ,EACR8B,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,MAAOzB,EAAOI,OAAOb,MACrBmC,SAAU1B,EAAO2B,aACjBC,MAAO5B,EAAO6B,QAAQtC,OAASuC,QAAQ9B,EAAO+B,OAAOxC,OACrDyC,WAAYhC,EAAO6B,QAAQtC,OAASS,EAAO+B,OAAOxC,SAEpD,SAAC4B,EAAA,EAAD,CACEC,OAAO,SACPC,WAAS,EACT7B,UAAQ,EACR8B,GAAG,WACHC,KAAK,WACLC,MAAM,WACNS,KAAK,WACLR,MAAOzB,EAAOI,OAAOX,SACrBiC,SAAU1B,EAAO2B,aACjBC,MAAO5B,EAAO6B,QAAQpC,UAAYqC,QAAQ9B,EAAO+B,OAAOtC,UACxDuC,WAAYhC,EAAO6B,QAAQpC,UAAYO,EAAO+B,OAAOtC,YAEvD,SAACyC,EAAA,EAAD,CACED,KAAK,SACLZ,WAAS,EACTc,QAAQ,YACRlB,GAAI,CAAEC,GAAI,EAAGkB,GAAI,GAJnB,0BAYT,E,mBC1GYC,GAAOC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,4ZCWJE,EAAa,WACxB,OACE,SAAC1B,EAAA,EAAD,CACEC,GAAG,OACH0B,QAAQ,OACRC,cAAc,SACdC,WAAW,SACXC,QAAS,EACTC,GAAI,EANN,UAQE,UAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,WACE,SAACC,EAAA,GAAD,KACA,UAAClC,EAAA,EAAD,CACEG,GAAI,CACFgC,UAAW,EACXR,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACO,EAAA,EAAD,CAAQjC,GAAI,CAAEkC,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYC,UAAU,KAAKpB,QAAQ,KAAnC,sBAGA,SAACxC,EAAD,KACA,SAAC6D,EAAA,GAAD,CAAMC,WAAS,EAACC,eAAe,WAA/B,UACE,SAACF,EAAA,GAAD,CAAMG,MAAI,EAAV,UACE,SAACtB,EAAD,CAAMuB,GAAG,SAAT,yDAOb,C","sources":["components/SingUp/SingUpForm.jsx","components/SingUp/SingUp.styled.jsx","pages/SingUpPage.jsx"],"sourcesContent":["import Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport * as Yup from 'yup';\nimport { Box } from 'components/Box';\nimport { useFormik } from 'formik';\n// import { useSignupMutation } from 'redux/authApi';\nimport { useDispatch } from 'react-redux';\n// import { updateToken } from '../../redux/authSlice';\nimport { register } from 'redux/authApi';\nimport { toast } from 'react-toastify';\n\n\nconst validationSchema = Yup.object().shape({\n  // name: Yup.string('Enter your name').required('name is required'),\n  email: Yup.string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: Yup.string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nexport const SingUpForm = () => {\n  // const [verify, setVerify] = useState(null);\n  const notify = text =>\n    toast.success(`${text}`, {\n      theme: 'dark',\n    });\n  const dispatch = useDispatch();\n  const controller = new AbortController();\n\n  const initialValues = {\n    // name: '',\n    email: '',\n    password: '',\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      dispatch(register(values, controller))\n        .unwrap()\n        .then(originalPromiseResult => {\n          console.log(originalPromiseResult);\n          notify('check your email to verify');\n          // setVerify(true);\n          // handle result here\n        });\n    },\n  });\n\n  //   if (cancellSignal) {\n  //   controller.abort();\n  // }\n\n  return (\n    <>\n  \n        <Box as=\"form\" onSubmit={formik.handleSubmit} sx={{ mt: 1 }}>\n          {/* <TextField\n          margin=\"normal\"\n          fullWidth\n          required\n          id=\"name\"\n          name=\"name\"\n          label=\"name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        /> */}\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            required\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            required\n            id=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Register\n          </Button>\n        </Box>\n\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(NavLink)`\n  margin: 0;\n  /* font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif; */\n  font-weight: 400;\n  font-size: 0.875rem;\n  line-height: 1.43;\n  letter-spacing: 0.01071em;\n  color: #1976d2;\n  /* -webkit-text-decoration: underline; */\n  text-decoration: underline;\n  text-decoration-color: rgba(25, 118, 210, 0.4);\n  :hover,\n  :focus {\n    text-decoration-color: inherit;\n  }\n`;\n","import { Box } from 'components/Box';\n// import { SingUp } from 'components/SingUp/SingUp';\nimport * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\n// import Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { SingUpForm } from 'components/SingUp/SingUpForm';\nimport { Link } from 'components/SingUp/SingUp.styled';\n// import { Link } from './SingUp.styled';\n\nexport const SingUpPage = () => {\n  return (\n    <Box\n      as=\"main\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      gridGap={3}\n      pt={5}\n    >\n      <Container maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <SingUpForm />\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\">Already have an account? Sign in</Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n"],"names":["validationSchema","Yup","shape","email","required","password","min","SingUpForm","dispatch","useDispatch","controller","AbortController","formik","useFormik","initialValues","onSubmit","values","register","unwrap","then","originalPromiseResult","text","console","log","toast","theme","Box","as","handleSubmit","sx","mt","TextField","margin","fullWidth","id","name","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","variant","mb","Link","styled","NavLink","SingUpPage","display","flexDirection","alignItems","gridGap","pt","Container","maxWidth","CssBaseline","marginTop","Avatar","m","bgcolor","LockOutlined","Typography","component","Grid","container","justifyContent","item","to"],"sourceRoot":""}