{"version":3,"file":"static/js/218.ad07506c.chunk.js","mappings":"gMAGaA,GAAOC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,2Z,qOCGXE,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,GAAW,oBACfE,MAAM,uBACNC,SAAS,uBAGDC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpBC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CAAEN,MAAO,IACxBO,iBAAkBV,EAClBW,SAAU,SAAAC,GACRN,EAASM,EACV,IAGH,OACE,+BACE,UAAC,IAAD,CAAKC,GAAG,OAAOF,SAAUJ,EAAOO,aAAcC,MAAM,OAApD,WACE,SAACC,EAAA,EAAD,CACEC,OAAO,SACPC,WAAS,EACTd,UAAQ,EACRe,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,MAAOf,EAAOK,OAAOT,MACrBoB,SAAUhB,EAAOiB,aACjBC,MAAOlB,EAAOmB,QAAQvB,OAASwB,QAAQpB,EAAOqB,OAAOzB,OACrD0B,WAAYtB,EAAOmB,QAAQvB,OAASI,EAAOqB,OAAOzB,SAEpD,SAAC2B,EAAA,EAAD,CACEC,KAAK,SACLb,WAAS,EACTc,QAAQ,YACRC,GAAI,CAAEC,GAAI,EAAGC,GAAI,GAJnB,sBAWP,E,4DC7BYC,EAAqB,WAChC,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOlC,EAAP,KAAcG,EAAd,KAEMgC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAWC,EAAAA,EAAAA,MAYjB,OAXAC,EAAAA,EAAAA,YAAU,WACR,GAAKxC,EAOL,OAJAsC,GAASG,EAAAA,EAAAA,IAAmBzC,IACzB0C,SACAC,MAAK,kBAAMC,EAAAA,EAAAA,IAAc,0BAApB,IACLC,OAAM,SAAAvB,GAAK,OAAIwB,EAAAA,EAAAA,IAAY,GAAD,OAAIxB,GAAnB,IACP,WAAQ,CAChB,GAAE,CAACgB,EAAUtC,KAGZ,8BACImC,GA4BA,+BACE,SAAC,IAAD,CACEzB,GAAG,OACHqC,QAAQ,OACRC,cAAc,SACdC,WAAW,SACXC,eAAe,SACfC,OAAO,QANT,UAQE,SAACC,EAAA,EAAD,SApCJ,+BACI,UAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,WACE,SAACC,EAAA,GAAD,KACA,UAACC,EAAA,EAAD,CACE1B,GAAI,CACF2B,UAAW,EACXV,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACS,EAAA,EAAD,CAAQ5B,GAAI,CAAE6B,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYC,UAAU,KAAKlC,QAAQ,KAAnC,8BAGA,SAAC3B,EAAD,CAAWC,SAAUA,KACrB,SAAC6D,EAAA,GAAD,CAAMC,WAAS,EAACf,eAAe,WAA/B,UACE,SAACc,EAAA,GAAD,CAAME,MAAI,EAAV,UACE,SAAC,IAAD,CAAMC,GAAG,SAAT,sCAsBnB,C,2BC7EGC,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,KAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,6ZACD,YAEJN,EAAQ,EAAUG,C","sources":["components/SingUp/SingUp.styled.jsx","components/AuthForns/EmailForm.jsx","pages/ForgotPasswordPage.jsx","../node_modules/@mui/icons-material/Password.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(NavLink)`\n  margin: 0;\n  /* font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif; */\n  font-weight: 400;\n  font-size: 0.875rem;\n  line-height: 1.43;\n  letter-spacing: 0.01071em;\n  color: #1976d2;\n  /* -webkit-text-decoration: underline; */\n  text-decoration: underline;\n  text-decoration-color: rgba(25, 118, 210, 0.4);\n  :hover,\n  :focus {\n    text-decoration-color: inherit;\n  }\n`;\n","import Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { Box } from 'components/Box';\n\nconst schema = Yup.object().shape({\n  email: Yup.string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n});\n\nexport const EmailForm = ({ setEmail }) => {\n  const formik = useFormik({\n    initialValues: { email: '' },\n    validationSchema: schema,\n    onSubmit: values => {\n      setEmail(values);\n    },\n  });\n\n  return (\n    <>\n      <Box as=\"form\" onSubmit={formik.handleSubmit} width=\"100%\">\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          required\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n        >\n          Send\n        </Button>\n      </Box>\n    </>\n  );\n};\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport BoxM from '@mui/material/Box';\nimport PasswordIcon from '@mui/icons-material/Password';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { Box } from 'components/Box';\nimport { EmailForm } from 'components/AuthForns/EmailForm';\nimport { SpinnerLoader } from 'components/SpinnerLoader/SpinnerLoader';\nimport { notifyError, notifySuccess } from 'helpers/notify';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { forgotPasswordUser } from 'redux/authApi';\nimport { getAuthIsLoading } from 'redux/selectors';\nimport { Link } from 'components/SingUp/SingUp.styled';\n\nexport const ForgotPasswordPage = () => {\n  const [email, setEmail] = useState(null);\n\n  const isLoading = useSelector(getAuthIsLoading);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!email) {\n      return;\n    }\n    dispatch(forgotPasswordUser(email))\n      .unwrap()\n      .then(() => notifySuccess(`Please check your email`))\n      .catch(error => notifyError(`${error}`));\n    return () => {};\n  }, [dispatch, email]);\n\n  return (\n    <>\n      {!isLoading ? (\n        <>\n            <Container maxWidth=\"xs\">\n              <CssBaseline />\n              <BoxM\n                sx={{\n                  marginTop: 8,\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                }}\n              >\n                <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                  <PasswordIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                  Forgot Password\n                </Typography>\n                <EmailForm setEmail={setEmail} />\n                <Grid container justifyContent=\"flex-end\">\n                  <Grid item>\n                    <Link to=\"/login\">Go to login</Link>\n                  </Grid>\n                </Grid>\n              </BoxM>\n            </Container>\n        </>\n      ) : (\n        <>\n          <Box\n            as=\"main\"\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            height=\"100vh\"\n          >\n            <SpinnerLoader />\n          </Box>\n        </>\n      )}\n    </>\n  );\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2 17h20v2H2v-2zm1.15-4.05L4 11.47l.85 1.48 1.3-.75-.85-1.48H7v-1.5H5.3l.85-1.47L4.85 7 4 8.47 3.15 7l-1.3.75.85 1.47H1v1.5h1.7l-.85 1.48 1.3.75zm6.7-.75 1.3.75.85-1.48.85 1.48 1.3-.75-.85-1.48H15v-1.5h-1.7l.85-1.47-1.3-.75L12 8.47 11.15 7l-1.3.75.85 1.47H9v1.5h1.7l-.85 1.48zM23 9.22h-1.7l.85-1.47-1.3-.75L20 8.47 19.15 7l-1.3.75.85 1.47H17v1.5h1.7l-.85 1.48 1.3.75.85-1.48.85 1.48 1.3-.75-.85-1.48H23v-1.5z\"\n}), 'Password');\n\nexports.default = _default;"],"names":["Link","styled","NavLink","schema","Yup","shape","email","required","EmailForm","setEmail","formik","useFormik","initialValues","validationSchema","onSubmit","values","as","handleSubmit","width","TextField","margin","fullWidth","id","name","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","Button","type","variant","sx","mt","mb","ForgotPasswordPage","useState","isLoading","useSelector","getAuthIsLoading","dispatch","useDispatch","useEffect","forgotPasswordUser","unwrap","then","notifySuccess","catch","notifyError","display","flexDirection","alignItems","justifyContent","height","SpinnerLoader","Container","maxWidth","CssBaseline","Box","marginTop","Avatar","m","bgcolor","Password","Typography","component","Grid","container","item","to","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}