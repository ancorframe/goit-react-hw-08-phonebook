{"version":3,"file":"static/js/534.9975038d.chunk.js","mappings":"gMAGaA,GAAOC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,2Z,wRCMXE,EAAmBC,EAAAA,KAAaC,MAAM,CAE1CC,MAAOF,EAAAA,GAAW,oBACfE,MAAM,uBACNC,SAAS,qBACZC,SAAUJ,EAAAA,GAAW,uBAClBK,IAAI,EAAG,qDACPF,SAAS,0BAGDG,EAAa,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACrBC,GAAWC,EAAAA,EAAAA,MAQXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAPoB,CAEpBV,MAAO,GACPE,SAAU,IAKVL,iBAAkBA,EAClBc,SAAS,WAAD,wBAAE,WAAMC,GAAN,0FAEAN,GAASO,EAAAA,EAAAA,IAASD,IAASE,SAF3B,QAGNC,EAAAA,EAAAA,IAAc,gBACdV,GAAW,GAJL,iDAMNW,EAAAA,EAAAA,IAAY,GAAD,cANL,yDAAF,mDAAC,KAWX,OACE,+BACE,UAACC,EAAA,EAAD,CAAKC,GAAG,OAAOP,SAAUH,EAAOW,aAAcC,GAAI,CAAEC,GAAI,GAAxD,WAaE,SAACC,EAAA,EAAD,CACEC,OAAO,SACPC,WAAS,EACTvB,UAAQ,EACRwB,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,MAAOpB,EAAOI,OAAOZ,MACrB6B,SAAUrB,EAAOsB,aACjBC,MAAOvB,EAAOwB,QAAQhC,OAASiC,QAAQzB,EAAO0B,OAAOlC,OACrDmC,WAAY3B,EAAOwB,QAAQhC,OAASQ,EAAO0B,OAAOlC,SAEpD,SAACsB,EAAA,EAAD,CACEC,OAAO,SACPC,WAAS,EACTvB,UAAQ,EACRwB,GAAG,WACHC,KAAK,WACLC,MAAM,WACNS,KAAK,WACLR,MAAOpB,EAAOI,OAAOV,SACrB2B,SAAUrB,EAAOsB,aACjBC,MAAOvB,EAAOwB,QAAQ9B,UAAY+B,QAAQzB,EAAO0B,OAAOhC,UACxDiC,WAAY3B,EAAOwB,QAAQ9B,UAAYM,EAAO0B,OAAOhC,YAEvD,SAACmC,EAAA,EAAD,CACED,KAAK,SACLZ,WAAS,EACTc,QAAQ,YACRlB,GAAI,CAAEC,GAAI,EAAGkB,GAAI,GAJnB,0BAWP,E,8BC1EYC,EAAa,WACxB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBrC,EAAhB,KACMsC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBzC,GAAWC,EAAAA,EAAAA,MACXyC,EAAW,mCAAG,2FACZC,EAAU,CAAEjD,MAAO2C,EAAK3C,OADZ,kBAGVM,GAAS4C,EAAAA,EAAAA,IAAsBD,IAAUnC,SAH/B,QAIhBC,EAAAA,EAAAA,IAAc,0CAJE,iDAMhBC,EAAAA,EAAAA,IAAY,GAAD,cANK,yDAAH,qDAUjB,OACE,8BACI8B,GA2DA,SAAC7B,EAAA,EAAD,CACEC,GAAG,OACHiC,QAAQ,OACRC,cAAc,SACdC,WAAW,SACXC,eAAe,SACfC,OAAO,QANT,UAQE,SAACC,EAAA,EAAD,OAlEF,8BAEId,GA0BA,UAACzB,EAAA,EAAD,CACEC,GAAG,OACHiC,QAAQ,OACRC,cAAc,SACdC,WAAW,SACXI,QAAS,EACTC,GAAI,EANN,WAQE,SAACC,EAAA,EAAD,CAAYC,UAAU,KAAKtB,QAAQ,KAAnC,0DAGA,UAACqB,EAAA,EAAD,CAAYC,UAAU,KAAKtB,QAAQ,KAAnC,+CAGI,SAACD,EAAA,EAAD,CACED,KAAK,SACLE,QAAQ,YACRlB,GAAI,CAAEC,GAAI,EAAGkB,GAAI,GACjBsB,QAASb,EAJX,wBAHJ,mBApCF,UAACc,EAAA,EAAD,CAAWC,SAAS,KAApB,WACE,SAACC,EAAA,GAAD,KACA,UAAC,IAAD,CACE5C,GAAI,CACF6C,UAAW,EACXd,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACa,EAAA,EAAD,CAAQ9C,GAAI,CAAE+C,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACV,EAAA,EAAD,CAAYC,UAAU,KAAKtB,QAAQ,KAAnC,sBAGA,SAAClC,EAAD,CAAYC,WAAYA,KACxB,SAACiE,EAAA,GAAD,CAAMC,WAAS,EAACjB,eAAe,WAA/B,UACE,SAACgB,EAAA,GAAD,CAAME,MAAI,EAAV,UACE,SAAC,IAAD,CAAMC,GAAG,SAAT,2DAiDnB,C,0BC1GGC,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,KAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,uNACD,mBAEJN,EAAQ,EAAUG,C","sources":["components/SingUp/SingUp.styled.jsx","components/SingUp/SingUpForm.jsx","pages/SingUpPage.jsx","../node_modules/@mui/icons-material/AppRegistration.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(NavLink)`\n  margin: 0;\n  /* font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif; */\n  font-weight: 400;\n  font-size: 0.875rem;\n  line-height: 1.43;\n  letter-spacing: 0.01071em;\n  color: #1976d2;\n  /* -webkit-text-decoration: underline; */\n  text-decoration: underline;\n  text-decoration-color: rgba(25, 118, 210, 0.4);\n  :hover,\n  :focus {\n    text-decoration-color: inherit;\n  }\n`;\n","import Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport * as Yup from 'yup';\nimport { Box } from 'components/Box';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/authApi';\nimport { notifyError, notifySuccess } from 'helpers/notify';\n\nconst validationSchema = Yup.object().shape({\n  // name: Yup.string('Enter your name').required('name is required'),\n  email: Yup.string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: Yup.string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nexport const SingUpForm = ({ setSuccess }) => {\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    // name: '',\n    email: '',\n    password: '',\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema: validationSchema,\n    onSubmit: async values => {\n      try {\n        await dispatch(register(values)).unwrap()\n        notifySuccess(`Successfull!`);\n        setSuccess(true);\n      } catch (error) {\n        notifyError(`${error}`);\n      }\n    },\n  });\n\n  return (\n    <>\n      <Box as=\"form\" onSubmit={formik.handleSubmit} sx={{ mt: 1 }}>\n        {/* <TextField\n          margin=\"normal\"\n          fullWidth\n          required\n          id=\"name\"\n          name=\"name\"\n          label=\"name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        /> */}\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          required\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          required\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n        >\n          Register\n        </Button>\n      </Box>\n    </>\n  );\n};\n","import { Box } from 'components/Box';\nimport * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport BoxM from '@mui/material/Box';\nimport AppRegistrationIcon from '@mui/icons-material/AppRegistration';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { SingUpForm } from 'components/SingUp/SingUpForm';\nimport { Link } from 'components/SingUp/SingUp.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAuthIsLoading, getUser } from 'redux/selectors';\nimport { SpinnerLoader } from 'components/SpinnerLoader/SpinnerLoader';\nimport { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport { notifyError, notifySuccess } from 'helpers/notify';\nimport { resendVerifyEmailUser } from 'redux/authApi';\n\nexport const SingUpPage = () => {\n  const [success, setSuccess] = useState(null);\n  const user = useSelector(getUser);\n  const isLoading = useSelector(getAuthIsLoading);\n  const dispatch = useDispatch();\n  const handleClick = async () => {\n    const request = { email: user.email };\n    try {\n      await dispatch(resendVerifyEmailUser(request)).unwrap();\n      notifySuccess(`We send you again. Please check email!`);\n    } catch (error) {\n      notifyError(`${error}`);\n    }\n  };\n\n  return (\n    <>\n      {!isLoading ? (\n        <>\n          \n          {!success ? (\n            <Container maxWidth=\"xs\">\n              <CssBaseline />\n              <BoxM\n                sx={{\n                  marginTop: 8,\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                }}\n              >\n                <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                  <AppRegistrationIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                  Sign up\n                </Typography>\n                <SingUpForm setSuccess={setSuccess} />\n                <Grid container justifyContent=\"flex-end\">\n                  <Grid item>\n                    <Link to=\"/login\">Already have an account? Sign in</Link>\n                  </Grid>\n                </Grid>\n              </BoxM>\n            </Container>\n          ) : (\n            <Box\n              as=\"main\"\n              display=\"flex\"\n              flexDirection=\"column\"\n              alignItems=\"center\"\n              gridGap={3}\n              pt={5}\n            >\n              <Typography component=\"h1\" variant=\"h5\">\n                Please check the email and follow the link.\n              </Typography>\n              <Typography component=\"h3\" variant=\"h5\">\n                If you did not receive the email,\n                {\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                    onClick={handleClick}\n                  >\n                    click here\n                  </Button>\n                }\n                to resend\n              </Typography>\n            </Box>\n          )}\n          \n        </>\n      ) : (\n        <Box\n          as=\"main\"\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          height=\"100vh\"\n        >\n          <SpinnerLoader />\n        </Box>\n      )}\n    </>\n  );\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10 4h4v4h-4zM4 16h4v4H4zm0-6h4v4H4zm0-6h4v4H4zm10 8.42V10h-4v4h2.42zm6.88-1.13-1.17-1.17c-.16-.16-.42-.16-.58 0l-.88.88L20 12.75l.88-.88c.16-.16.16-.42 0-.58zM11 18.25V20h1.75l6.67-6.67-1.75-1.75zM16 4h4v4h-4z\"\n}), 'AppRegistration');\n\nexports.default = _default;"],"names":["Link","styled","NavLink","validationSchema","Yup","shape","email","required","password","min","SingUpForm","setSuccess","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","register","unwrap","notifySuccess","notifyError","Box","as","handleSubmit","sx","mt","TextField","margin","fullWidth","id","name","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","variant","mb","SingUpPage","useState","success","user","useSelector","getUser","isLoading","getAuthIsLoading","handleClick","request","resendVerifyEmailUser","display","flexDirection","alignItems","justifyContent","height","SpinnerLoader","gridGap","pt","Typography","component","onClick","Container","maxWidth","CssBaseline","marginTop","Avatar","m","bgcolor","AppRegistration","Grid","container","item","to","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}